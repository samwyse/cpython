/* Auto-generated by Tools/scripts/generate_opcode_h.py from Lib/opcode.py */
#ifndef Py_OPCODE_H
#define Py_OPCODE_H
#ifdef __cplusplus
extern "C" {
#endif


    /* Instruction opcodes for compiled code */
#define POP_TOP                   0
#define ROT_TWO                   1
#define ROT_THREE                 2
#define DUP_TOP                   3
#define DUP_TOP_TWO               4
#define ROT_FOUR                  5
#define NOP                       6
#define UNARY_POSITIVE            7
#define UNARY_NEGATIVE            8
#define UNARY_NOT                 9
#define UNARY_INVERT             10
#define BINARY_MATRIX_MULTIPLY   11
#define INPLACE_MATRIX_MULTIPLY  12
#define BINARY_POWER             13
#define BINARY_MULTIPLY          14
#define BINARY_MODULO            15
#define BINARY_ADD               16
#define BINARY_SUBTRACT          17
#define BINARY_SUBSCR            18
#define BINARY_FLOOR_DIVIDE      19
#define BINARY_TRUE_DIVIDE       20
#define INPLACE_FLOOR_DIVIDE     21
#define INPLACE_TRUE_DIVIDE      22
#define GET_LEN                  23
#define MATCH_MAPPING            24
#define MATCH_SEQUENCE           25
#define MATCH_KEYS               26
#define COPY_DICT_WITHOUT_KEYS   27
#define WITH_EXCEPT_START        28
#define GET_AITER                29
#define GET_ANEXT                30
#define BEFORE_ASYNC_WITH        31
#define END_ASYNC_FOR            32
#define INPLACE_ADD              33
#define INPLACE_SUBTRACT         34
#define INPLACE_MULTIPLY         35
#define INPLACE_MODULO           36
#define STORE_SUBSCR             37
#define DELETE_SUBSCR            38
#define BINARY_LSHIFT            39
#define BINARY_RSHIFT            40
#define BINARY_AND               41
#define BINARY_XOR               42
#define BINARY_OR                43
#define INPLACE_POWER            44
#define GET_ITER                 45
#define GET_YIELD_FROM_ITER      46
#define PRINT_EXPR               47
#define LOAD_BUILD_CLASS         48
#define YIELD_FROM               49
#define GET_AWAITABLE            50
#define LOAD_ASSERTION_ERROR     51
#define INPLACE_LSHIFT           52
#define INPLACE_RSHIFT           53
#define INPLACE_AND              54
#define INPLACE_XOR              55
#define INPLACE_OR               56
#define LIST_TO_TUPLE            57
#define RETURN_VALUE             58
#define IMPORT_STAR              59
#define SETUP_ANNOTATIONS        60
#define YIELD_VALUE              61
#define POP_BLOCK                62
#define POP_EXCEPT               63
#define HAVE_ARGUMENT            64
#define STORE_NAME               64
#define DELETE_NAME              65
#define UNPACK_SEQUENCE          66
#define FOR_ITER                 67
#define UNPACK_EX                68
#define STORE_ATTR               69
#define DELETE_ATTR              70
#define STORE_GLOBAL             71
#define DELETE_GLOBAL            72
#define ROT_N                    73
#define LOAD_CONST               74
#define LOAD_NAME                75
#define BUILD_TUPLE              76
#define BUILD_LIST               77
#define BUILD_SET                78
#define BUILD_MAP                79
#define LOAD_ATTR                80
#define COMPARE_OP               81
#define IMPORT_NAME              82
#define IMPORT_FROM              83
#define JUMP_FORWARD             84
#define JUMP_IF_FALSE_OR_POP     85
#define JUMP_IF_TRUE_OR_POP      86
#define JUMP_ABSOLUTE            87
#define POP_JUMP_IF_FALSE        88
#define POP_JUMP_IF_TRUE         89
#define LOAD_GLOBAL              90
#define IS_OP                    91
#define CONTAINS_OP              92
#define RERAISE                  93
#define JUMP_IF_NOT_EXC_MATCH    94
#define SETUP_FINALLY            95
#define LOAD_FAST                96
#define STORE_FAST               97
#define DELETE_FAST              98
#define GEN_START                99
#define RAISE_VARARGS           100
#define CALL_FUNCTION           101
#define MAKE_FUNCTION           102
#define BUILD_SLICE             103
#define LOAD_CLOSURE            104
#define LOAD_DEREF              105
#define STORE_DEREF             106
#define DELETE_DEREF            107
#define CALL_FUNCTION_KW        108
#define CALL_FUNCTION_EX        109
#define SETUP_WITH              110
#define EXTENDED_ARG            111
#define LIST_APPEND             112
#define SET_ADD                 113
#define MAP_ADD                 114
#define LOAD_CLASSDEREF         115
#define MATCH_CLASS             116
#define SETUP_ASYNC_WITH        117
#define FORMAT_VALUE            118
#define BUILD_CONST_KEY_MAP     119
#define BUILD_STRING            120
#define LOAD_METHOD             121
#define CALL_METHOD             122
#define LIST_EXTEND             123
#define SET_UPDATE              124
#define DICT_MERGE              125
#define DICT_UPDATE             126
#define HAVE_REGISTERS          127
#define BINARY_ADD_REG          127
#define BINARY_AND_REG          128
#define BINARY_FLOOR_DIVIDE_REG 129
#define BINARY_LSHIFT_REG       130
#define BINARY_MATRIX_MULTIPLY_REG 131
#define BINARY_MODULO_REG       132
#define BINARY_MULTIPLY_REG     133
#define BINARY_OR_REG           134
#define BINARY_POWER_REG        135
#define BINARY_RSHIFT_REG       136
#define BINARY_SUBSCR_REG       137
#define BINARY_SUBTRACT_REG     138
#define BINARY_TRUE_DIVIDE_REG  139
#define BINARY_XOR_REG          140
#define RETURN_VALUE_REG        141
#define LOAD_CONST_REG          142
#define LOAD_GLOBAL_REG         143
#define LOAD_FAST_REG           144
#define STORE_FAST_REG          145
#define STORE_GLOBAL_REG        146
#define COMPARE_OP_REG          147
#define IS_OP_REG               148
#define CONTAINS_OP_REG         149
#define JUMP_IF_FALSE_REG       150
#define JUMP_IF_TRUE_REG        151
#define UNARY_INVERT_REG        152
#define UNARY_NEGATIVE_REG      153
#define UNARY_NOT_REG           154
#define UNARY_POSITIVE_REG      155
#define BUILD_TUPLE_REG         156
#define BUILD_MAP_REG           157
#define BUILD_LIST_REG          158
#define LIST_EXTEND_REG         159
#define CALL_FUNCTION_REG       160
#define CALL_FUNCTION_KW_REG    161
#define CALL_FUNCTION_EX_REG    162
#define INPLACE_ADD_REG         163
#define INPLACE_AND_REG         164
#define INPLACE_FLOOR_DIVIDE_REG 165
#define INPLACE_LSHIFT_REG      166
#define INPLACE_MATRIX_MULTIPLY_REG 167
#define INPLACE_MODULO_REG      168
#define INPLACE_MULTIPLY_REG    169
#define INPLACE_OR_REG          170
#define INPLACE_POWER_REG       171
#define INPLACE_RSHIFT_REG      172
#define INPLACE_SUBTRACT_REG    173
#define INPLACE_TRUE_DIVIDE_REG 174
#define INPLACE_XOR_REG         175
#define LOAD_ATTR_REG           176
#define STORE_ATTR_REG          177
#define DELETE_ATTR_REG         178
#define GET_ITER_REG            179
#define FOR_ITER_REG            180
#define IMPORT_NAME_REG         181
#define BUILD_SET_REG           182
#define DICT_MERGE_REG          183
#define DICT_UPDATE_REG         184
#define BUILD_STRING_REG        185
#define FORMAT_VALUE_REG        186
#define RAISE_VARARGS_REG       187
#define LOAD_DEREF_REG          188
#ifdef NEED_OPCODE_JUMP_TABLES
static uint32_t _PyOpcode_RelativeJump[8] = {
    0U,
    0U,
    2148532232U,
    2113536U,
    0U,
    1048576U,
    0U,
    0U,
};
static uint32_t _PyOpcode_Jump[8] = {
    0U,
    0U,
    3287285768U,
    2113536U,
    0U,
    1048576U,
    0U,
    0U,
};
#endif /* OPCODE_TABLES */

/* EXCEPT_HANDLER is a special, implicit block type which is created when
   entering an except handler. It is not an opcode but we define it here
   as we want it to be available to both frameobject.c and ceval.c, while
   remaining private.*/
#define EXCEPT_HANDLER 257

#define HAS_ARG(op) ((op) >= HAVE_ARGUMENT)

#define HAS_REGISTERS(op) ((op) >= HAVE_REGISTERS)

#ifdef __cplusplus
}
#endif
#endif /* !Py_OPCODE_H */
